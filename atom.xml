<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Beutiful Code]]></title>
  <link href="http://blog.graykara.com/atom.xml" rel="self"/>
  <link href="http://blog.graykara.com/"/>
  <updated>2012-04-09T17:39:13+09:00</updated>
  <id>http://blog.graykara.com/</id>
  <author>
    <name><![CDATA[graykara]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[mysql remote dump]]></title>
    <link href="http://blog.graykara.com/blog/2012/04/09/mysql-remote-dump/"/>
    <updated>2012-04-09T17:15:00+09:00</updated>
    <id>http://blog.graykara.com/blog/2012/04/09/mysql-remote-dump</id>
    <content type="html"><![CDATA[<p>주기적으로(최소한 하루 한 번) MySQL database 를 백업하기 위해 cron job 을 사용하여 매일 마다 백업 후, ftp 를 통해 특정 서버에 덤프파일을 업로드하도록 설정합니다.</p>

<h2>실행환경</h2>

<ul>
<li>Ubuntu Server</li>
<li>LFTP</li>
<li>crontab</li>
</ul>


<h2>LFTP Install</h2>

<p>커맨드라인 ftp 툴인 lftp 패키지를 사용하기 위해서 우선 lftp 를 설치합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install lftp</span></code></pre></td></tr></table></div></figure>


<h2>MySQL 서버의 백업을 위한 shell script</h2>

<p>쉘 스크립트는 아래의 코드와 같습니다.
이를 통해서 /home/<em>username</em>/mysqldump/ 폴더에 특정 db 를 제외한 모든 데이터베이스의 덤프를 기록하고 FTP 서버에 업로드 됩니다.
<strong>사용자명</strong>과 <strong>비밀번호</strong>는 스크립트를 사용하기 전에 설정해야 합니다.</p>

<figure class='code'><figcaption><span>mysql.backup.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c">### MySQL Server Login Info ###</span>
</span><span class='line'><span class="nv">MUSER</span><span class="o">=</span><span class="s2">&quot;root&quot;</span>
</span><span class='line'><span class="nv">MPASS</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="nv">MHOST</span><span class="o">=</span><span class="s2">&quot;localhost&quot;</span>
</span><span class='line'><span class="nv">MYSQL</span><span class="o">=</span><span class="s2">&quot;$(which mysql)&quot;</span>
</span><span class='line'><span class="nv">MYSQLDUMP</span><span class="o">=</span><span class="s2">&quot;$(which mysqldump)&quot;</span>
</span><span class='line'><span class="nv">BAK</span><span class="o">=</span><span class="s2">&quot;/home/username/mysqldump&quot;</span>
</span><span class='line'><span class="nv">GZIP</span><span class="o">=</span><span class="s2">&quot;$(which gzip)&quot;</span>
</span><span class='line'><span class="c">### FTP SERVER Login info ###</span>
</span><span class='line'><span class="nv">FTPU</span><span class="o">=</span><span class="s2">&quot;ftp_user_name&quot;</span>
</span><span class='line'><span class="nv">FTPP</span><span class="o">=</span><span class="s2">&quot;ftp_password&quot;</span>
</span><span class='line'><span class="nv">FTPS</span><span class="o">=</span><span class="s2">&quot;ftp_address&quot;</span>
</span><span class='line'><span class="nv">NOW</span><span class="o">=</span><span class="k">$(</span>date +<span class="s2">&quot;%d-%m-%Y&quot;</span><span class="k">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span> ! -d <span class="nv">$BAK</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> mkdir -p <span class="nv">$BAK</span> <span class="o">||</span> /bin/rm -f <span class="nv">$BAK</span>/*
</span><span class='line'>
</span><span class='line'><span class="nv">DBS</span><span class="o">=</span><span class="s2">&quot;$($MYSQL -u $MUSER -h $MHOST -Bse &#39;show databases&#39;)&quot;</span>
</span><span class='line'><span class="k">for </span>db in <span class="nv">$DBS</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k"> if</span> <span class="o">[</span> <span class="nv">$db</span> !<span class="o">=</span> <span class="s2">&quot;information_schema&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="nv">$db</span> !<span class="o">=</span> <span class="s2">&quot;mysql&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="nv">$db</span> !<span class="o">=</span> <span class="s2">&quot;dbname&quot;</span> <span class="o">]</span>
</span><span class='line'> <span class="k">then</span>
</span><span class='line'><span class="k">   </span><span class="nv">FILE</span><span class="o">=</span><span class="nv">$BAK</span>/<span class="nv">$db</span>.<span class="nv">$NOW</span>-<span class="k">$(</span>date +<span class="s2">&quot;%T&quot;</span><span class="k">)</span>.gz
</span><span class='line'>   <span class="nv">$MYSQLDUMP</span> -u <span class="nv">$MUSER</span> -h <span class="nv">$MHOST</span> <span class="nv">$db</span> | <span class="nv">$GZIP</span> -9 &gt; <span class="nv">$FILE</span>
</span><span class='line'> <span class="k">fi</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'><span class="k"> </span>
</span><span class='line'>lftp -u <span class="nv">$FTPU</span>,<span class="nv">$FTPP</span> -e <span class="s2">&quot;mkdir ./$NOW;cd ./$NOW; mput ./mysqldump/*; quit&quot;</span> <span class="nv">$FTPS</span>
</span></code></pre></td></tr></table></div></figure>


<p>/home/<em>username</em>/mysql.backup.sh 로 저장한 후에, 실행 권한을 줍니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chmod +x ~/mysql.backup.sh</span></code></pre></td></tr></table></div></figure>


<p>최초 백업을 위해서 쉘 스크립트를 실행합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./mysql.backup.sh</span></code></pre></td></tr></table></div></figure>


<h2>cron job 으로 MySQL 백업 자동화</h2>

<p>cron job 에 작업을 등록하여 매일 정해진 시간에 위의 작업이 이루어질 수 있도록 합니다.</p>

<p>crontab 편집기를 실행하여 아래와 같이 설정합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ crontab -e</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>crontab</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>00 04 * * /home/username/mysql.backup.sh &gt; /dev/null 2&gt;&amp;1
</span></code></pre></td></tr></table></div></figure>


<h2>결과물</h2>

<p>이로써 MySQL database Server 의 데이터베이스를 매일 백업해서 압축된 덤프파일을 특정 FTP 서버로 업로드 되도록 하는 작업이 완료되었습니다.</p>

<ol>
<li>SQL database Server 의 덤프폴더에는 데이터베이스명.%d-%m-%Y-%T.gz 형태의 압축된 백업 파일이 생성될 됩니다.</li>
<li>압축된 백업파일은 특정 FTP 서버에 날짜별 폴더를 만든 후, 각각 업로드 됩니다.</li>
<li>다음 날, 새롭게 백업 파일을 만들 때 이전 백업파일이 존재하면 해당 내용은 삭제하여 MySQL database Server 상에는 데이터베이스 별로 최신 백업파일 하나만이 존재하게 됩니다.</li>
</ol>


<p>이후, 특정 FTP 서버로 전송된 백업 파일은 외부 저장소에 주기적으로 2차 백업을 하여 데이터베이스 보존에 심혈을 기울여야할 것 입니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Setup]]></title>
    <link href="http://blog.graykara.com/blog/2012/04/09/octopress/"/>
    <updated>2012-04-09T15:57:00+09:00</updated>
    <id>http://blog.graykara.com/blog/2012/04/09/octopress</id>
    <content type="html"><![CDATA[<p><strong>프로그래머를 위한 블로그 프레임워크 Octopress</strong> 설치 방법을 기술합니다.</p>

<p>설치 환경은 Mac OSX 10.7.3 을 기준으로 합니다.</p>

<h2>Requirements</h2>

<ul>
<li>GIT</li>
<li>RVM</li>
<li>RUBY 1.9.2</li>
</ul>


<h3>GIT</h3>

<p>시스템에 port 혹은 homebrew 를 통해 git이 설치 되어있음을 전제로 합니다.</p>

<h3>RVM</h3>

<p>루비 버전 관리자인 RVM을 통해서 RUBY 1.9.2 를 설치할 것이므로 RVM 을 먼저 설치합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -L get.rvm.io | bash -s stable
</span><span class='line'>$ source ~/.bash_profile
</span><span class='line'>$ rvm requirements</span></code></pre></td></tr></table></div></figure>


<h3>RUBY 1.9.2</h3>

<p><code>rvm list</code> 명령으로 설치되어 있는 Ruby 패키지를 확인합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm list
</span><span class='line'>rvm rubies
</span><span class='line'>   ree-1.8.7-2010.02 [ i686 ]
</span><span class='line'>=&gt; ruby-1.9.2-head [ x86_64 ]
</span><span class='line'>   ruby-1.9.2-p0 [ x86_64 ]
</span><span class='line'>   ruby-1.9.3-p125 [ x86_64 ]
</span><span class='line'># =&gt; - current
</span><span class='line'># =* - current && default
</span><span class='line'>#  * - default</span></code></pre></td></tr></table></div></figure>


<p>이미 1.9.2 버전으로 진행 중인 프로젝트가 있고, 이에 따라 <code>Gem</code> 파일의 연관 관계가 복잡합니다. :(</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem list
</span><span class='line'>*** LOCAL GEMS ***
</span><span class='line'>abstract (1.0.0)
</span><span class='line'>actionmailer (3.0.0.rc, 3.0.0.beta4)
</span><span class='line'>actionpack (3.0.0.rc)
</span><span class='line'>activemodel (3.0.0.rc)
</span><span class='line'>activerecord (3.0.0.rc)
</span><span class='line'>activeresource (3.0.0.rc)
</span><span class='line'>activesupport (3.0.0.rc, 2.3.8)
</span><span class='line'>arel (0.4.0)
</span><span class='line'>...
</span><span class='line'>...
</span><span class='line'>...
</span><span class='line'>tzinfo (0.3.26, 0.3.23, 0.3.22)
</span><span class='line'>uniform_notifier (1.0.1)
</span><span class='line'>validation_reflection (0.3.7)
</span><span class='line'>validation_reflection-active_model (0.2.0)
</span><span class='line'>warden (0.10.7)
</span><span class='line'>webrat (0.7.2.beta.1)
</span><span class='line'>whenever (0.5.0)
</span><span class='line'>will_paginate (3.0.pre2)
</span><span class='line'>yard (0.6.1, 0.5.8)
</span><span class='line'>yui-compressor (0.9.1)
</span><span class='line'>ZenTest (4.4.0, 4.3.3)</span></code></pre></td></tr></table></div></figure>


<p>RVM 의 장점은 여러 버전의 Ruby 를 관리할 수 있는 것이므로,</p>

<p>2012/04/09 기준 1.9.2 버전의 최신 버전인 p318 로 설치하였습니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm install ruby-1.9.2-p318
</span><span class='line'>$ rvm list
</span><span class='line'>rvm rubies
</span><span class='line'>   ree-1.8.7-2010.02 [ i686 ]
</span><span class='line'>   ruby-1.9.2-head [ x86_64 ]
</span><span class='line'>   ruby-1.9.2-p0 [ x86_64 ]
</span><span class='line'>=&gt; ruby-1.9.2-p318 [ x86_64 ]
</span><span class='line'>   ruby-1.9.3-p125 [ x86_64 ]
</span><span class='line'># =&gt; - current
</span><span class='line'># =* - current && default
</span><span class='line'>#  * - default</span></code></pre></td></tr></table></div></figure>


<h2>Setup Octopress</h2>

<p>github 의 저장소를 통해 octopress 를 설치합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>$ cd octopress
</span><span class='line'>$ ruby -v</span></code></pre></td></tr></table></div></figure>


<p><code>ruby -v</code> 을 통해 확인된 정보가 1.9.2 라면 bundler 를 통해 필요한 gem file 을 설치합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install</span></code></pre></td></tr></table></div></figure>


<p>기본 Octopress 테마를 rake 명령어를 통해서 설치합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake install</span></code></pre></td></tr></table></div></figure>


<h2>Deploying</h2>

<p>Github Pages</p>

<p><code>http://username.github.com</code> 을 통해 블로그를 호스팅할 수 있습니다.</p>

<p>이를 위해 우선 Github 저장소를 생성합니다.</p>

<p>생성된 저장소의 git 주소는 <code>git@github.com:username/username.github.com.git</code> 로 참조가 가능해집니다.</p>

<p>그러면 <code>rake</code> 명령어를 통해서 github 관련 설정을 합니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>이 때, Github Pages 저장소의 url 을 묻게 되는데, 이 때, <code>git@github.com:username/username.github.com.git</code> 를 입력하면 됩니다.</p>

<h2>Configuration</h2>

<h2>Blogging Basics</h2>
]]></content>
  </entry>
  
</feed>
